[language-server]

elixir-ls = { command = "elixir-ls", config = { elixirLS.autoBuild = true, elixirLS.dialyzerEnabled = true,  elixirLS.dialyzerWarnOpts = [], elixirLS.dialyzerFormat = "dialyxir_long", elixirLS.envVariables = {}, elixirLS.mixEnv = "test", elixirLS.mixTarget = "", elixirLS.projectDir = "", elixirLS.fetchDeps = false, elixirLS.suggestSpecs = true, elixirLS.trace.server = "off", elixirLS.autoInsertRequiredAlias = true, elixirLS.signatureAfterComplete = true, elixirLS.enableTestLenses = false, elixirLS.additionalWatchedExtensions = [], elixirLS.languageServerOverridePath = "" } }


# All defaults, plus:
# E203: whitespace before ":"
# E402: module level import not at top of file
# E731: do not assign a lambda expression, usa a def
[language-server.pylsp.config.pylsp.plugins]
pylint.enabled = true
pyflakes.enabled = true
pyls_mypy.enabled = true
pycodestyle.maxLineLength = 88
pycodestyle.ignore = ["E121", "E123", "E126", "E133", "E203", "E226", "E241", "E242", "E402", "E704", "W503", "W504", "W505", "E731"]

[language-server.clangd]
args = ["-header-insertion=never"]

[[language]]
name = "python"
auto-format = true
formatter = { command = "black", args = ["-", "--quiet", "--line-length=88"] }

[[language]]
name = "cpp"
auto-format = true
formatter = { command = "clang-format", args = ["-style=file:/home/austreng/.config/helix/clangformat"] }

[[language]]
name = "c"
auto-format = true
file-types = ["c", "h"]
formatter = { command = "clang-format", args = ["-style=file:/home/austreng/.config/helix/clangformat"] }

[[language]]
name = "elixir"
scope = "source.elixir"
injection-regex = "(elixir|ex)"
file-types = ["ex", "exs", "mix.lock", "html.heex"]
shebangs = ["elixir"]
roots = ["mix.exs", "mix.lock"]
comment-token = "#"
language-servers = [ "elixir-ls" ]
auto-format = true
indent = { tab-width = 2, unit = "  " }
formatter = { command = "mix format", args = ["-"] }
diagnostic-severity = "Hint"
